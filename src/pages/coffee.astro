---
import BaseLayout from "../layouts/BaseLayout.astro";
import { coffeeShops } from "../data/coffee";
import { siteConfig } from "../config";

const headProps = {
  title: `Coffee · ${siteConfig.name}`,
  description: "My ranked list of Glasgow's coffee shops",
  link: `${import.meta.env.SITE}/coffee`
};
---

<BaseLayout headProps={headProps}>
	<article class="coffee-page">
		<header class="page-header">
			<a href="/" class="back-link">← Back</a>
			<h1>Coffee Leaderboard</h1>
			<p class="subtitle">Ranking (Glasgow's) coffee shops.</p>
		</header>

		<div class="leaderboard">
			{coffeeShops.map((shop) => (
				<article class="coffee-item">
					<div class="rank-badge" data-rank={shop.rank}>
						{shop.highlight ? shop.highlight : `#${shop.rank}`}
					</div>
					<div class="coffee-content">
						<div class="coffee-meta">
							<h3 class="shop-name">{shop.name}</h3>
							<div class="meta-details">
								<span class="location">{shop.location}</span>
								<span class="separator">·</span>
								<span class="visit-date">{shop.visitDate}</span>
							</div>
						</div>
						<div class="rating-bar">
							<div class="stars">
								{Array.from({ length: 5 }, (_, i) => (
									<span class={`star ${i < Math.floor(shop.rating) ? 'filled' : i < shop.rating ? 'half' : 'empty'}`}>
										{i < shop.rating ? '★' : '☆'}
									</span>
								))}
							</div>
							<span class="rating-value">{shop.rating.toFixed(1)}</span>
						</div>
						<p class="notes">{shop.notes}</p>
					</div>
				</article>
			))}
		</div>
	</article>
</BaseLayout>

<style>
	.coffee-page {
		width: 100%;
		display: flex;
		flex-direction: column;
		gap: 3em;
	}

	.page-header {
		display: flex;
		flex-direction: column;
		gap: 1em;
	}

	h1 {
		font-size: 1.8em;
		font-weight: 500;
		margin: 0;
		color: var(--theme-text);
	}

	.subtitle {
		color: var(--theme-sub-text);
		font-size: 0.95em;
		margin: 0;
		line-height: 1.6;
	}

	.leaderboard {
		display: flex;
		flex-direction: column;
		gap: 2em;
	}

	.coffee-item {
		display: grid;
		grid-template-columns: 3em 1fr;
		gap: 1.5em;
		align-items: start;
		padding: 1em 0;
		border-bottom: 1px solid var(--theme-sub-text);
		border-bottom-opacity: 0.1;
		transition: transform 0.2s ease;
	}

	.coffee-item:last-child {
		border-bottom: none;
	}

	.coffee-item:hover {
		transform: translateX(3px);
	}

	.rank-badge {
		font-size: 1.4em;
		font-weight: 500;
		color: var(--theme-sub-text);
		text-align: center;
		padding-top: 0.2em;
	}

	.rank-badge[data-rank="1"] {
		font-size: 1.8em;
		color: var(--theme-accent);
	}

	.coffee-content {
		display: flex;
		flex-direction: column;
		gap: 0.7em;
	}

	.coffee-meta {
		display: flex;
		flex-direction: column;
		gap: 0.4em;
	}

	.shop-name {
		font-size: 1.1em;
		font-weight: 500;
		margin: 0;
		color: var(--theme-text);
	}

	.meta-details {
		display: flex;
		align-items: center;
		gap: 0.5em;
		font-size: 0.85em;
		color: var(--theme-sub-text);
	}

	.separator {
		color: var(--theme-sub-text);
		opacity: 0.5;
	}

	.rating-bar {
		display: flex;
		align-items: center;
		gap: 0.8em;
	}

	.stars {
		display: flex;
		gap: 0.15em;
		font-size: 1em;
	}

	.star {
		color: var(--theme-sub-text);
		transition: color 0.2s;
	}

	.star.filled {
		color: var(--theme-accent);
	}

	.star.half {
		color: var(--theme-accent);
		opacity: 0.6;
	}

	.rating-value {
		font-size: 0.9em;
		color: var(--theme-sub-text);
		font-variant-numeric: tabular-nums;
	}

	.notes {
		font-size: 0.95em;
		color: var(--theme-text);
		opacity: 0.85;
		margin: 0;
		line-height: 1.7;
	}

	@media (max-width: 768px) {
		.coffee-page {
			gap: 2em;
		}

		h1 {
			font-size: 1.5em;
		}

		.coffee-item {
			grid-template-columns: 2.5em 1fr;
			gap: 1em;
			padding: 0.8em 0;
		}

		.rank-badge {
			font-size: 1.1em;
		}

		.rank-badge[data-rank="1"] {
			font-size: 1.5em;
		}

		.meta-details {
			flex-wrap: wrap;
		}
	}
</style>

